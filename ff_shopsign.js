/*
店铺签到，各类店铺签到，有新的店铺直接添加token即可
搬运cui521大佬脚本

cron 0 0 * * * ff_shopsign.js, tag=店铺签到ff
*/
const $ = new Env('店铺签到ff');

const notify = $.isNode() ? require('./sendNotify') : '';
//Node.js用户请在jdCookie.js处填写京东ck;
const jdCookieNode = $.isNode() ? require('./jdCookie.js') : '';
//IOS等用户直接用NobyDa的jd cookie
let cookiesArr = [], cookie = '', message;

const JD_API_HOST = 'https://api.m.jd.com/api?appid=interCenter_shopSign';

let activityId=''
let vender=''
let num=0
let shopname=''

const token=[
	'FEE797596B0EBF0EF543EAC5BD7E4772',
	'9B6037F33B761744D76B333013BF2856',
	'99BF71AC6AE9A83CA90B93491B588C60',
	'160D4DDA13C935770E2143FD42D7CBBE',
	'0933528653A10AC96DBB8EC1E28E051F',
	'B152B9C9B8A371593C08E94D89FD84B2',
	'E6BE7E787A58E913CFE0B6BB06A075A5',
	'9929E85D2F276C8890EE98C4467C56FB',
	'3BEB73826B1F5DCE43E1D3634E1E76B9',
	'3BEB7515E63B176C8908306EECB4EE55',
	'80DAF4E81B1F482062BF0F6DB84FE7F5',
	'6FA21C636A3ABD7E3C2D6521A9B73974',
	'320023F49455857BE30EDE42A4252C39',
	'2F0B1169395022780B80C4E94CD2C453',
	'FF7DBDBD965A8A4F6E27AA40B811411B',
	'8D1135CC83544ED387FB7D68C8AC6B35',
	'89585FA846A75EAE377549FAE25509C3',
	'3A51333712024E6B40FD551F67AF00E8',
	'68B3143B5EDACF371DD831416F62D40C',
	'B965ED8C890F3ED137C9373AF200FBAF',
	'C6D9E061AC79AD312D82FA4AE1A67F84',
	'D0BF077D57DB85780223D8BAD8C25E26',
	'0EF9BBE3E22AA2BA8A7A782E64F7D19B',
	'FDC74CD04C98CFF5F23A9150C0DCDF75',
	'81D5A3100BE87FA37C04FE8F2C6DC2B4',
	'083CEDE29670526EDAD8FB7E6424FE68',
	'A84AC5BA173D5939872C38DCFF7D8B0A',
	'C7F51346BD533DC8FBBC26B3C512E26D',
	'A9286B105BBF3B5573DC05C978AC3A4F',
	'609B1BCBF27978BAF039A9FCDF206520',
	'E9F05891C6CA18BD5A6A5AB7E8780BFB',
	'FDB78FEE768CB78A0C21DE08FA27D68C',
	'78E07358BFC13889654410FE0CDBF543',
	'59A599FC752929B0B307B129B9D83211',
	'D5F9C2474321FAE22D44BB0F1F026941',
	'F3CD169FDFA6D2025C7053B3D0A68508',
	'88008244F490BC80065EC49C184F72FA',
	'36BB26378C0030C2A7B91768FBE6B68A',
	'27BF6B5BD5771971FCE35A148B726EB7',
	'7ADA1E3FD32834CAD52C313700C008A8',
	'65AAC621682D00F61EFB216B035093D8',
	'938EC98AC5A538B527AEC24D3A00DBD9',
	'DBFC82291815A1EA624E1BC56468D23C',
	'A81EB76296ECC41CDE24EA3FC0EE37E9',
	'C31BC1E35CE9CCD3035611E83D4DF410',
	'D5502D15267D6DD2A319C1E1F7C6F37E',
	'65F141E3444F4DC3FA955C2FADE79E90',
	'779F05865264916DFF64B9E0E6F73D1E',
	'876EA4D4B7A42AB3ADEF2F6CB688E82A',
	'A802E5C83A09FC6D92046938C59BC6A4',
	'0E42B097B72E0B719BCBE5A003006367',
	'068A5DAAB5767D72F659CD8E9CC4EA61',
	'BBC4E2C8E162B972276277C42169184C',
	'355A925F780C8ACE8BF48DA7E935CF17',
	'A33AF9FDEF5B2BDB0DA36CBB5A0EC6B2',
	'50682D5B74542E799FC7BA98AF5947D1',
	'A3BA42B1E9CDCD2D58655C8D2FDC468A',
	'4E318F4B3FDF98A1B8A0923AA53DF7AC',
	'D839086BD5D523DDB3143B6B19FFD275',
	'A2262945EB4AE660D1867B5AE5C1F01C',
	'92F4C03D045272FACBF39FEE018BF608',
	'0F64A024AB75D291B70E7E4DD9F9DB41',
	'10BDB93E8F5C74FC21F00C0D6E4537FC',
	'B5926685F2CCB36502FE848021E50CB8',
	'6783715D9CA7636318DC3223FAA29DBD',
	'DCD1BDEBF6DFC1DB44B7C8D1BD0636CD',
	'EA973BDF8BC28B34CCB15CB14D940034',
	'AAAEFF87A65032A288C13B8175616568',
	'F2F0FF3C6D8E0822F9D6EBDB3B60E60F',
	'51CB1FC17574D9E30F70E1FDE4A3D49B',
	'E67B5A33F0663429FD68B4BAAAB5B6EE',
	'9B637392270B0B6572723A4DEAC1F4A4',
	'EDFF034FA425F6F1E115A8CE4A7172F1',
	'E46411D9796F5201F8CD0DA565C6B041',
	'7DA48F70E892E67B46FE2E09BA408187',
	'A4955AF8774CA99AB7B9A7206616DCCA',
	'99BF71AC6AE9A83CA90B93491B588C60',
	'8897F22B0005A7A4E1B139FA18F8BB7E',
	'137EBB7417300EFD808F5314055AF95F',
	'A1C78E35D0800FADF688AE3412F01BBA',
	'F51D7A68CB54CDEEEAA5B1665BF62CCA',
	'9A80FF96A0012A4936D686B09663C762',
	'7260D2547CF496E144407399EBACC3B0',
	'EC97C8B3361632879D7D19848166E49F',
	'C6376C00D49B6DA6DA83F97AD7F758C6',
	'E30B2F97D763178862FC2197CC26D192',
	'E11304380F994E9C177BF3DADA7E50B1',
	'19D3BD62C2A73CAABF0B1FF6D9BE1DC9',
	'534223CF9554E4305C8976D0C4287E42',
	'F48EA929D68878F72B04D0F8A5A80947',
	'29EE68A6E519413D1F1D11A9D1C2A369',
	'471D97941CE76727C8F9CED210ABA42B',
	'2FAB2B402A593D85CB3162C484641F97',
	'74699F815230DEE9D144F2E02490FC26',
	'7FE5C2FB74916CF678DFC5EBEFFB9F83',
	'D1BF1AB5F9E61CE2277140B2578DB459',
	'07EA3935843BD5E7031662667775C3A5',
	'F692ACBF8DC2AF2F5864988AE86A7194',
	'3F9A11B4E318969C2567F899BCB4AFBE',
	'8111EE06946DAB79472DFDF2A13C2DB9',
	'EAF5B80569556858855AADA596612804',
	'E6638564E46E3DFA08773D4415D7BEA5',
	'515830553E57D699661B8D52143740E2',
	'20F1F028472BB36819B8690C419F98D0',
	'816EF844AA31242F053481D003C91ED7',
	'8A865902534B8A45011372C2725B5501',
	'E82FDA40BC1A30078325D5C8F4B2A7BD',
	'0ED6AA3719BA98E5AA5E294D9BAF8A0F',
	'41F8E0D6DFEBA3ACF6B9532153A38A17',
	'73C9F68C82016C0E6B437CCF490B2356',
	'BB0964088E55214D44080EE6A9F1AB70',
	'08C27B7C079BBEB5C2ABFCEF4D4D4ABB',
	'689C031E500AB4EFD5206E25E0FD6365',
	'FA5BFD6EB6630EBEA29255DB67F729BA',
	'6426552A3974195FE2B28DF29128345F',
	'C661C7898402EC2B811DF2070E3A2822',
	'D101216513697605F9FBB9A5ECF8C024',
	'1765DC5D1313949330E105A06F066FB5',
	'B4B039102B021B2D0DAC62D34CA1A18C',
	'23169AF6AFB42992B09B2C6898F4C428',
	'2F6BDE0EAD60F8DEFBD89AFAD8A7FBA7',
	'80DAF4E81B1F482062BF0F6DB84FE7F5',
	'AC78BA74F4EBD0A312E5AA5F958537F9',
	'4483FE5DA6A7C37667F6A158400E383D',
	'E1222C470AB0475E14ACB87C985BAB74',
	'F4E7AEE7A8B2DE20F12AAE2A5D57786B',
	'8C3A782CF2B63FCADA599627830677B1',
	'E6BE7E787A58E913CFE0B6BB06A075A5',
	'D9178082D9723FD3CF600F627D1FD3E9',
	'A148ED577D5B1A832EFD528D3DFAEEE3',
	'BAC2772A6F09EAAFF0CC37381A144E7D',
	'8989E904D8C7CD7EC6337FF4D7AF8B89',
	'3C3CF83BE884BDC0CC85D24EDDFF6FF5',
	'26E2D1B1A547A1CDA0DD3B89C4C0D7BD',
	'820E16166E744F7CBB259249E10AA99C',
	'4F36DAAB018DFDD1B7B4A924AEA2A9B3',
	'5F97EA423FEEB66EC198511D5ED1BB03',
	'C559FFB88DBED0AB40BF6F519F4A71B9',
	'F1A60E89AE9B5FED2EF63107CB862C97',
	'743E49590A25EB32D1B0C2AC8AD945E2',
	'11BD9A6FB56C240808FE24EBB7FFC984',
	'E6C1FC5B4EBF84AC56E6239ACD7EA3A4',
	'96762332288051774DE925A5B3B2B27D',
	'4ED3FE1C9D3A74E53C5DA81ED5BCBC5F',
	'C419040457F9D9287FC0F540293CD103',
	'2521C9BFEF0AAE544000BBCBF8F81AA1',
	'160D4DDA13C935770E2143FD42D7CBBE',
	'A7B9A8A519BC02EA5E692D0A0CE92314',
	'4AA8A680BEF1C01F7D6D4E1EE086D392',
	'D01DF4F3BCBDF52777D0606513EABB7D',
	'FC4DA0FD8C282D605D3D82CBB6E59552',
	'100E51671708C7DB766EBF59BFA00653',
	'6C52040FDFEC9CF69B2B85A70E251F9E',
	'0F62459ADB217BE3E0E351049BF80D56',
	'C4EBC2B65015DC0A5B64926AD3D93A15',
	'A2C1F73F53B69F27F4F061387E07E609',
	'A0608BD461E87ED9D3E89E1F47E192F2',
	'B97F8EB51269C46851B256FFC53C8E70',
	'3B37FE2E7D4100399DFD946CA646CD72',
	'DD991A6F8492DF0CF694A23D85B223B4',
	'110EABB6D814609A2487BB486ABC4C41',
	'31EE6E3434CCCFA7860BFD9119AEB414',
	'296742A079DD6BC15BC231F9D8A5B292',
	'94C65D489A40BC4E593EF088CCDA1B57',
	'D8557DC76380E43C9CFB9163266A1D53',
	'AECD96F9A4B90B37F8D4C39B7B35974B',
	'09B47A9E6B0C835238D1BD6BEAE0B73E',
	'DED2C72DDC172D62E98E76E34877A11B',
	'9C1F14176D351FCC2A83266F6CD8B9E4',
	'D8BD980D6472E7F2797AEA74FFED52EA',
	'7044A17DCD8E381C363D0FD787851D97',
	'AC57EE772B25ACDE51151B6F7D30B9BE',
	'5FF51CBF0E1434E4BADBAE4FDCA7DEB6',
	'12EFB12972022BEC95A96F45826BDAA0',
	'CC1C9DEB8CD2162BD3616630BF84B341',
	'80823C548BA77BE78AECE1B27BDC9F44',
	'D1B2D08415AC4E1F46A7BA42F234BBB2',
	'302EEE50D037D3BF504A254243F4683E',
	'390313C72F2D24F62F403412D985A99F',
	'A9FCD10BE56A3A4F6DF893131D910FEF',
	'875D044AC17C79963D5E79FB0EAB6F47',
	'A2154E565EBB738750DEE489FA5BA75D',
	'AF0EB36E427B59171971A741B336C58E',
	'F819B1B32183FACA1249A207ADAD742F',
	'D4B360513D2B3E5584C56E80A7329E22',
	'5DC8F4FD702FB7FFBFEB6413E69DD61D',
	'0411BBBA911AD207F2BD8DDA06B5DBA0',
	'623DDF0318F49B251BA0DD4305193058',
	'BB297F8FCD013C9472F7C4DD70218700',
	'8DCE6F491CA57BC810507584493ECD01',
	'793D16EA926CDC9903D5F8727345EA6E',
	'9503DC11F93EABAAF5FABF7CB7F9ACCF',
	'60B29720119FB3FFC0AB8CC761FE5AFA',
	'60811408FD8183DE2176E5630BE1B8EA',
	'F96A8F412113584867D8060C1B48A2A4',
	'6FE4F2675CE3B8E785D82D9BBB25EBBE',
	'EA9ADB8BF0930A9C894DE20071963981',
	'176B89DCFFF14B87790B9A2F637CA4BE',
	'AB58B7EA42F621A7D9D383AF1A81D570',
	'B5A2B80278FAE78C38B6F39973410073',
	'3D2E711FF410DE8FB348D28DF8374D71',
	'9A6E044F83C948BA0E4B9A5C06E287BD',
	'B4F922E35981BC7436917332D3394E9B',
	'0E1D5338DB119D149F6BC89F436DC0B9',
	'8BF57ED55486BD4098A61C11F0B3FD14',
	'77ABD23B6CA4A4568BE6EA6CC4F03A51',
	'C244BBFAFFCA83A8411109D2466EC350',
	'D7D841ADCAA4D9A5D37A0C596F8F500D',
	'98C3215FC84DC45E31AC033680F3995C',
	'96E0C602ED98AA2BC537CAA201FD3E9E',
	'0318CEF3B0414542138976FC9CCDBA2F',
	'D1820FAA3DCB6121E332457D82EE17E2',
	'AD9B23C53F3C6AFED6A874A22151CF9A',
	'DCF28C50D018B5AE5BFBA4515B94BA72',
	'B32D26A681D5BB482745065BD3ADDD6F',
	'FC456BF7C32B63565789C1B596812925',
	'B703D97BDF6B44DF6BC9E72346DE21CB',
	'D580E8A24B3853C8B3068F3641794E2F',
	'FCD4E0CD02A6AB6100E8C63D48FC0F86',
	'ADEDD9A07CA2F4E6D1061C816B50B4F9',
	'5F746F3497F5E7922E92FA61A749ED7A',
	'53815DCF32E616389035CE86C949CCA2',
	'E6C6CEEAE1144C5302411B3101A1B8A8',
	'C199507B4FDF16E1F406A985F51252CD',
	'3BBB95CB0E49B3C81316DDDECE392172',
	'F197E75ABEDD9BD2267E29C1B8405E40',
	'FDDED5E2526AF7241D46465D3F934AB0',
	'FE24B42AE585956ABEDE54EEC5793492',
	'6AEA6E935C7D9988886E77BC45E1A705',
	'817BBE94FCFD8CD970E9D68BEAA55D71',
	'B1C506775125427A651660A1262980D0',
	'DB053DC2F476772D7277B7DDBA620D2F',
	'9C06A6FF047D5FEEF9DC41D7B6E65E8B',
	'EC365A8D11B5F0EED4F43F5450FE0A91',
	'8DEDF17E478C81A1A3FDE83DDBAD5B8B',
	'92D9610E219733BAFCA49FFA7F1F560C',
	'A79608C26DFD67126460BFF2EC083B82',
	'FBBD2B3934FD86D385673BA5B63A40EA',
	'65D686379D5700D6C8C376D679DBC1AC',
	'9BF3F1E2F3FE978CC8EAF2F948BE74C4',
	'0EDFAE3B347026BE693BAA6F0582CE0C',
	'5243F4029A442AA016837CB6500704F3',
	'FF27957B161D94A9C1A0ACAD4362A722',
	'526F5E82949CF4162870913DC17C73CF',
	'537E92C63E6542519F52FB87D680B87A',
	'2AB7790F4AE3E81EA57BB616B82323D3',
	'CB86BDE8A1B6920C1A8A0188BE98F65B',
	'E79018C47901995D058E0994C18DAA76',
	'5BF47C69E1DAD552832732CF37ACADE4',
	'C0163DBD6BB02A0C86F8F597ACD943F7',
	'56D5D31EC53A6C08CA0697588E0B8C98',
	'2D2951EA4F98768B5E80CCA7D37C68B2',
	'A5BD6F5690BF855DCC4C40E38D9DA1F1',
	'FCD578B8F6A6EC89FF73E119D3589233',
	'25C07F70CFA82AA2E93779837FE0ADE0',
	'161CAB5DA820B40AAA5FFD2CA1727C7E',
	'13962FD30421AC78EB57E9AEB9DB7EBA',
	'64A668CB1415DE5BE241D229E9B5EBD2',
	'A174B5B5213B68477C8585F7E0964D56',
	'6FA21C636A3ABD7E3C2D6521A9B73974',
	'99ABD774E4FBBCD4C722D08B84C6E002',
	'0E2B76542953728A97DE79620333E3D7',
	'0757C9CDBEAF43EA1987FEBC3A003FBE',
	'A0A999C50E92A3A1616E2A3E4B4FF6F0',
	'725BB9FB23D791A56F2C8802FAA82435',
	'6518E1A2EE7E25AC4129341388FFA9FA',
	'CACCA01C90A16E9EC6745D1C6FC383CE',
	'226A5D75742B82B5F42F954FAD9C42A3',
	'18C1B7989F8A8870F78DBFCAAFDF51F8',
	'AA0A0C0C651CD55CDB951FA5D6DFABBC',
	'F3CAEE9BE3A951C8BB2AE6E1AB83FA6E',
	'CB4691AB1A4EA7AE039AD4F2C207A85A',
	'D73F254172D94BD4713F78BDBFB483E0',
	'4C5CFB00593CF8E59C5B26782A01D8E9',
	'98CC5B3557BD83061B566B30745304D0',
	'9710A893BEF8E1C49B3003616AC01684',
	'75093A4FCBD170C3FED89CBA7FB96F4E',
	'8001833D90C3EB6D06F601723B042157',
	'D6D5DAB5E6189C1D67726A0478727561',
	'73E92500F62200588A9FEEFA29ACA399',
	'ABDD3833FD0ECB8A845AEB856DFD9F46',
	'558C6587872E81C51FCD30B82F660BCE',
	'4C63048C6898882D20AE37CC14D0BD0E',
	'C27F1CBB97F34C797AA0C30BA4085556',
	'D17F907FA0E105D255D62BBE2B247FB5',
	'131243499E4BADC6322D031B910B9D4E',
	'284B1CCECC6743999E91DBBE7CEEF9F8',
	'66C3F383F0A197A472C0B7D527D4B529',
	'195E1765891A9B4E9AC63F21AEC2DD31',
	'C93E5112061D5048ACDF9AE3E22E37F7',
	'53920DE0046EA17E1684234629525476',
	'86F31A29840487B6C06F3D2EA6BEF5A0',
	'3683B170EFF8F2229EF0C7590150AF18',
	'CFB94B9F53FCBB3C6FBFB69DC8F28826',
	'E9E46DB3172B14CBC9FC64C6566660C9',
	'BEBC1605E1571BDBE97F559328CE5419',
	'9A73097CAAA72AA89620F0CBEFA69198',
	'2510DFD629075EAB60BF39DCAE3656F2',
	'75940FEBEE7A2EBEE947056F6841277E',
	'DF0F4EBBD6B64E5F02E1DDDF3A336D2C',
	'D8A2E1E8CBDA817D6BCBDF2DA1B7C894',
	'CD9AFD4EBEE3B8C98F17DED1F3A23AD6',
	'CEF59AA312E3B58C9BD310DC08B08BD1',
	'C0E0387C63347CA9709FE4B3548F4559',
	'00A790FD0CC07750417A6483A2F7D172',
	'6AE520E5A117141234079209859E6DEF',
	'7A5D7FA2801D7B1A3A77AA4B1EC4DAB0',
	'BDD122D0AA17A32474889E40F960846F',
	'7E3CBA448E14312E72412A14A629D08A',
	'4B3789A86A8DCE7451D7F9DBF34FB655',
	'77061BA2748F87578292AE45C6958B7D',
	'A54658675279EEE306AF745BDB7AB33E',
	'FEE797596B0EBF0EF543EAC5BD7E4772',
	'74122D97F1365A7DB0A79414AA922DD2',
	'D4AAE16F9A4FAF6CF91AAA74EA662040',
	'DA2E9640663912A087B6B8B7B6B71CF3',
	'EF15BDD6202286D2D77F6337877AB947',
	'FEF8FAAB0718D483B45D0DE65FE7129F',
	'4AC272755335A8E2FA117CC26911BB8C',
	'4B316F0D57ECDAB7B00D6FBE131CFD0A',
	'6D0373217466A332838D5280087825F8',
	'955BF4192001D811A1F127653452A7A2',
	'0780BA09F9EC4E320C7496891D8B0C38',
	'511E9CA0608986B8621E03145309C88C',
	'B7D87C75333B8FA1DC0D0C40A189ECBE',
	'22FCC16BC5FC5CC873AA7706DBB4E608',
	'0095EE3A7A06AFA31E668A09F8023314',
	'BCDA42C8F23C0D94FFB195640E516BDA',
	'FD7B8276E635CE739CF7BBFA6098C03F',
	'3BEB7515E63B176C8908306EECB4EE55',
	'2082F3AC7089DD1E5A14B6614AFA3FAA',
	'878568C8B59A639073BF26009DDB9648',
	'8A85081498DF75A24942944542BCB758',
	'96EC993C96B6E48C7FB12B41408AE323',
	'F71ED06BA14C1D2FAEBC8B0A62F64BB7',
	'4FED259F41CC3CB5922048470C1EFE15',
	'206F0EFBDFDC094D09BFB37F9DAD7356',
	'B2DB45F2E889401C3A0B3E5D4B249C04',
	'F25CA5F7F5FD060AD1C24D331FC6AD7F',
	'14A79CBD037F98CA241DD41CC6ED2003',
	'26B3471491637BD5A0C44AB4FA5E9B95',
	'4E6291A39D47BECCE40BD002870E8983',
	'6E86E37F39AD7D33EC64B46E7F4A094E',
	'46DA88D3AAF1FC0F1186251BD0722E4B',
	'33C76FFD05706074F445D43E8BD3003F',
	'8DDFABBFD828489953ED7A038C6C05BB',
	'59E20B14B71F6DB18E0BFE4A22F4E343',
	'0FA38A3644B8DCBDE7D6391829F1FC41',
	'F1320321020CA4FEE05B56EA25F46B36',
	'920C4B125F802948FC597830BCDDBBAE',
	'1D48B8B4AC423C20C67EF3B7F4C21918',
	'64E424325E9FCCE4A15C22846623028E',
	'7F4FBAE43523FE3CD8F114AABDEE7956',
	'8D64AEF24FEDAE08E52C5CE750EFFA8A',
	'420B97ABECE42CD9965FEF15A326528B',
	'08327BDFA341884766D2519C6BAD255B',
	'1DF4EB3BC5B04AD060D4E572DA4CEF35',
	'A605B03D1334F2BD01274CB4502AC07F',
	'9790C93978E4273A327516B24BC4B186',
	'723CE7AB39E8D5F7D862DABDA6092154',
	'E4AE75BC49BA963F2C5C2D059787935E',
	'B50735021C1F119364CBFE266356791E',
	'43189D974122AC5C20073DDFE3FE8391',
	'5AB9ACE2C234815726448A5819D146F3',
	'D11DB9658A4A630BF21E92D92B6731A2',
	'F15D8B6B6B0B70EA1B8B1DE5446A8EAE',
	'1FEC8EE61E728819C7233F3479AE98C5',
	'2358263BDDCDD7F97C8A85838DB69C83',
	'BFD39F2ABB2FCF4AB031EB46433A8A9D',
	'7B2804E00B33FB4E1D3B1405FCD3A9C6',
	'32D53DAFAD2D04693A4C047493AC95D1',
	'BACF4D4B5C27E14DBD3D29256D93112D',
	'01F1D0087D0BF9BBE3D3F4BDB5EEB5B7',
	'68E5E5F2D6548B7B352846036134EBF3',
	'76809DBCECBA2CA1C2311E1AE119A252',
	'98ACBABC45DD79B92A29600D049F5EB8',
	'C96DBF1E591E31728F5BC2E8F007AA19',
	'0D2F56CDFB142840152463C9D71956B9',
	'DEFBA674D587F76E8C285B6F8878906C',
	'7837E5A7A5F807F5086771F03DFA870D',
	'07AA6A5BA001EA45B3B93984E254B17C',
	'F62F8F192BE60063EAB21C1D87B85F42',
	'1CCBEBA1A68A12A340B8E7DEE43BDF2B',
	'757CC6744B9F2A10BABE6499F3BF5E1B',
	'F84A7BE210611704FFDA54783F603E17',
	'0B7CA216C539677FADE79F1894C3DB4B',
	'0DBC515958618681EDAE369B7B43814B',
	'7D1E5BEE16E2F66917D67408FF0A99F5',
	'779A1FD11D2AACB1EEBD8FBC390BAC64',
	'A938BD43CF367CD2ABC9E1C27BB27EEC',
	'BEB52747B43A9B0BC000F7B9CFF60724',
	'3334DE8F06BB357F9751A301F8C91243',
	'0D7EF62235C1A3D6430FAE72CD72EE46',
	'B88ECF9C66062EA7F4582095176AA576',
	'D8A7B6E4E62DC409F6473DEC03E136FA',
	'A18501073FA763E0EC5BDF2AAC748B23',
	'E35958E121CCB4D0DA7132EE844B62C7',
	'320E514E98E584EB48A98D71F597083A',
	'5194F0A0CB97B28F638D90F1889027F9',
	'A441B1645E8F6A9C62273C8FD3FB0486',
	'848F5271372A0F1CFF6AEFDCF474D487',
	'A9BC60B988A76D492D29FEEE90109D5D',
	'D5648A6B4C304B4C1C8E333928FC3F09',
	'B6D954B8EB4A1A94F734BD64394B0F3D',
	'7CA5DE91065DEE9DB69815E8521991A3',
	'B42C27D7BAC98B1543ED15FCA2B338CD',
	'F59B28F4EF58DCCD01BE95481F5F5248',
	'33C9F47F6BD9C69D97EF6D9B7426D770',
	'1668768ED15CA8D886E167B2188555A2',
	'48A6766645AF82CEF6163A8068C30AB7',
	'FBA96B8BCEC0812C61612CBD263DD21E',
	'94B5E4FECA77D2E634E5B6A192620522',
	'6C7DC15B8817807A7E332860C5BC080F',
	'60FA7BE688D3DD3CA403FE287BC6426C',
	'64B9BDEDC796D874E08A13AACCA518BA',
	'669E0B0D0C1C901F42EB1985F53880D3',
	'38646B06052F5B7CFB0FC44A459E852C',
	'0D8EDDE2014C1A12346C1C0577FB3B2D',
	'11DB5AB19C4BD55731EBF66CF15B159B',
	'61ED580999D1B39C1E8812511FE9E9A5',
	'3537F0A7E95359F82DE49742AD201289',
	'A310B081C692E1D5385C3C4864A84DCE',
	'03D350B6FECF3BC11C3C9AD9287CE754',
	'4ED02817EECF5DB62FBF90F7A7AB61FA',
	'7AA1514E9B12E9D2577BCA7CA21C320E',
	'0CE9CBC3C8BD5270BE479A70CA1AF330',
	'B8F8FFF58DB81AD6264A6911F1C00614',
	'8C534A646AAFAFAE07B07E650897685A',
	'4753C34A3F999F817B83246D728B1445',
	'4F948355010AC388095F0A3B6FAAD912',
	'25BAE60DA59292252AF1EFBA5753B47A',
	'1226103D5FF88901FCFEFFEF22B2E458',
	'40680B3392081D3BDB96E5B2F69089E8',
	'00A01A36A8844AE301B57A58E3E2BA57',
	'8BE9C820B295EB072A2CEEB47D586E31',
	'3798ED19AFE36505B49210A2C885409B',
	'5F42266C3F252C4EA1B9214F4EDCE659',
	'6FCEC9150A2FF15182CD547045CC8DC2',
	'F777B40A4E989510C2C82F2C0EC64B41',
	'A2E58D5EEA0D790BD5C8C342EE6131C3',
	'E44B130B7312B72CAF6C37DBA1670E5C',
	'6FEE264769A7060DA5EF2EBF2E312042',
	'22833BF49D86B76B82DC65ED4AFF44E0',
	'253BAB21EEC54D6F5A576F8665F6D1C3',
	'CB1B43A46F4FF70C53786DB125DDDE34',
	'1819F7AB730F535ECCA03340213BB87F',
	'B9743E41739BFC6373DAACC54004A000',
	'99A7679D647198976CE683C110088927',
	'2CBA60F4AEF251CABF8052EA7A62E1EA',
	'BA2D9EB203E5AC9627D4D478FE422E72',
	'7B00BF6A42D8D44C7B150B690B481712',
	'4A521EA1101F539FFD0DE290B29CA324',
	'451C6FBD41BBB38BBF4570C12ECDA0E2',
	'9572B314A67727340406FC4D790B84A8',
	'2594207DFC6059D1F56B3BEE22921F00',
	'C859B9DF93B7BFCFCA7533DA03591981',
	'2BC110E437C1FF38AB9047D399A4CEC0',
	'142FB06D1CD2463B04B23236A02D83F7',
	'B862EE31C8159EC81224A98077BBDB93',
	'D2D82EDE361BF974045540EF46D50A22',
	'17906B144837F2C67D06497D4E51A6D8',
	'080C69EE5CE3EEFD9DEDF444684DC8F7',
	'CDBAE5428A178E8ED22D08F061BDF705',
	'98C5285AF3EBFC4B5C3FD05395239953',
	'BF9ADAA19B6C4A211DCEF23322370430',
	'4578FA462E676171FC61530B51C9CC6D',
	'F80F634D5D106D42F17E4374C8ADAC89',
	'2950758C51266241A38A468FAFC1F8F8',
	'BB113471E8EB5D1DCAFCFFC7000B40E5',
	'498BA5601694BB902C22BAA8D5DE66CF',
	'29BAC87D6632DCC46C2E06987E5EEF91',
	'796D1590261A88727C160FF462343947',
	'F56269EB8BD16FD816F2471D6E4AA032',
	'0AAF8340E162B4829064950850ED9503',
	'AE8A0A9C19CC8F8A1D7E3D00D3F27276',
	'59318B9BBAB61BDF0A90E640C089908A',
	'88B318A761F3AEDD6EB000C0A7767E1C',
	'EA3F7E8AF1AE39B1A2F44412FF3B60C6',
	'E06B776A342EF59E22AAFB643B1182D3',
	'BE3329667F67014317C8BBD22A082E9B',
	'DD1E930FF1C64D2599FCC7D9189EBD2F',
	'B980E2E53C9D9AAE2B37E6E125E98E44',
	'E207A7B87DF8599E63568153F5FC7EF4',
	'2FE25F7437CCE883E4F2DD3835A32895',
	'4929C4746C8D35AB6C3427E742A51D40',
	'46CE63BE629358B2A3787276C5A88846',
	'22AEB99182CCECA73ECF99DA0399C86D',
	'0DFF17A3F8A82AC8187AF784CD3FAD8A',
	'2316EE654405CD22F9234DD97B7D31C1',
	'614F01F4DED894F41CEFEB48E822ECAF',
	'47B181268D4AE5C07A8CC517B545198F',
	'5F73404514C45F151B213066EE5F94C5',
	'575B497E54F79ADA1C8AEDF650450ECB',
	'827672F54F7E56690AE7827BFD71C08E',
	'1840C9C7C7084FCF85BB1FF8BA7109E4',
	'9A42B3E0E6C8D997543E69D7BA9B4395',
	'289966FCC1A6F8821BF7A9356D6D8CBE',
	'51A708BFB96F825ADE7FF1D600F4C72F',
	'C1FC0D0E0EAD9B0030023503C47FE589',
	'1415810A0AFC992D8CD991C9DA88F2B9',
	'72C2EEBD7D757E06A0C1E63C899DA331',
	'1558415D9CC0B7F8DB30175EF073B9DC',
	'D5675B0E959CDF747EB8E8E888FF935A',
	'3C4644FE7CFB79383B6B47F09B651AA7',
	'E69858E5E54E02980C46F25F98FA161F',
	'2FDFF7538C64CFD51CDE7195ADA91F74',
	'F8C956AC6A9020110FBF3C370E435CFF',
	'BC5FE0FF1D2B9E43D38A9C8309478062',
	'03CD1F47539648761CC0CF05329908EF',
	'50EB599EDAE74845FB1D92EBF6C61D25',
	'DACBDA743EAC06AB01A28F020DD17D66',
	'74F8D667ACEA4FB0183147D9B3A4CCCE',
	'5AC9D63C407DBD6052A8956CD12BA155',
	'17F72664C59B52A83F81846661DED26D',
	'B9EC50DD551C238A4797CD25A556C002',
	'A45FD5C71DEAB3A840DD68E351473051',
	'7E71CD324C5583F4195EBD36B5992E5B',
	'7FBE970D94B48FBF93E989D7A4699F06',
	'F4967CE0ECBAFE02DBD4A75777133370',
	'B4C1DA65365EAFD486A7F0AC01E588F3',
	'02B1A156D0CA11610CBA3BE3F44C7C32',
	'91C42C1F5FFA58B8D0FC761442F2889F',
	'72936BFECA7B79E8CC0256AFD49C6372',
	'BB6403A2E52007F7D2FEF9F4667BEA04',
	'10BE8B719B9A5CA998E9C34F159439A2',
	'E8787600F064FF08DD5BED0CB7E3A572',
	'0E6F30A5C2C9C472F56C8C57FFFDC2BE',
	'C7E1C1ADAD11D958C1946516FDB03719',
	'6F142726A114D474BA7441C9FE25716E',
	'FF8701825F012920229A26E77FDCC30C',
	'011887CE95417F7935FE451DA541D152',
	'C4602D2A3823D2A11504C0EEC05BC4E0',
	'BEED456659211C760D96D4D83CDD0602',
	'A4F8F50E0A649EF59F7A1F29B26A096B',
	'BF3573E84C9ED4FCCB12454EB4A79B4B',
	'BFDBC2C8133F4247B3D85552E26CC25B',
	'B7A41C802FF6C0352FDB3DBF1DABB990',
	'E7D8365CE7123C9BC0267CACADA9496F',
	'7B2A459F91701B04DD2E0C54BE6B7CA5',
	'A514ACF91895AC92019F40528BF9B764',
	'0D0B7E412C882528802E27AF25A0B832',
	'E40326D6D3D13C674FDD2EDF5E55CC18',
	'8787149D3853B7C4216113DB860D963F',
	'B86E205410DF9140DECE6F2821A11B9C',
	'80F54BC07A162BC8271DFAAC2C5FBF4C',
	'247C658E7E37976EC1DA7BC32EF43AB2',
	'498BE5913A2B62774DFE430F57C72CD5',
	'7049E42CE1CDE5E33B7549D4E6F4A794',
	'59276F2AC5CC43C629E3B12EEBB0D661',
	'C26C92A89CBC9A728FE031B2B51A95EE',
	'540B0912263D14A24C54A13AAB712B8E',
	'4F0D3FE2B58C12E430D6E14D9B790275',
	'000450D4C01042B279499BF6B4AC5ED1',
	'C59F362BA83AFE77F6490E613227A872',
	'F87A4AC8936EA4363C74586A37D622AB',
	'975153AAA6E866384E824354181A9027',
	'B1368159D22588E824591F2E872EB06B',
	'B8A138A0B4555D4AD3C827B6CC5E2405',
	'68456380173750CE01724938C711507A',
	'336C5CD57FAFD04B331C0231B871DC88',
	'14791656E189EE9B7CB6E1A13CC60D10',
	'67AC1A0B12259B8D2FBCEB415B2A1933',
	'5F216355998C0589A10DA5B964FB8CC6',
	'894FF92FA9745063743D893320039C37',
	'D2984D4CE77C7944965493839231BB38',
	'DCC8F279A3D1817255ADEAE48CFB2B30',
	'FFF5DF7A8D9F2C70E7510F527DA29053',
	'FC65E53226135A32ABBCAB4AA5877CE0',
	'9565E88E8609DB7F67F5F95B7A9ACEAC',
	'0EE70BF07B76D365F4BF177EA6F69CC1',
	'833B370B58CFCA1BEB2AF4937EED8B7C',
	'9A99CCB04B6382519D82036202C48245',
	'9542085FFDB51476EE59D5A6502D67F0',
	'75F72A3681E5C610E0D8F6D88D685735',
	'BC8933EA6FAF0E8615ACE41921618471',
	'F8E1AD7D0699A511C41BDE49B2B723E1',
	'1087AEC1F618403C1EEFBB4DC60ED0F9',
	'0D8E167F5BDB2A946985579E6EBEC643',
	'63A344FC8B38FBE5A09409F063B5F0C2',
	'92A464307E7B76C97DBDC78BDFEC781A',
	'701A77A01395843D5F7F373CDDDB0B18',
	'3127A78E6B29E332969D3EA311F5723A',
	'9484EF902B298895D61D9BF8E3F74C4F',
	'FD9D50F03293D936EE67DBE3857C166E',
	'86041313E81F61516D92B0CBA1F2C3E2',
	'9DB1B79B716CE514C929A6FD7D8960FC',
	'714EA6EDB46A8E28D5835FC49890FACC',
	'B8C03C079C223D5E0A4C1D435CDA1396',
	'295FA443BF18CB3A09FC4031C05F1A5A',
	'49427BD0E953F72C3160FD7FDCCD716F',
	'9B786E69367D858B3A4A4B4387BF6587',
]
//IOS等用户直接用NobyDa的jd cookie

$.TokenList =[];

if ($.isNode()) {
  Object.keys(jdCookieNode).forEach((item) => {
    cookiesArr.push(jdCookieNode[item])
  })
  if (process.env.JD_DEBUG && process.env.JD_DEBUG === 'false') console.log = () => {};
} else {
  let cookiesData = $.getdata('CookiesJD') || "[]";
  cookiesData = jsonParse(cookiesData);
  cookiesArr = cookiesData.map(item => item.cookie);
  cookiesArr.reverse();
  cookiesArr.push(...[$.getdata('CookieJD2'), $.getdata('CookieJD')]);
  cookiesArr.reverse();
  cookiesArr = cookiesArr.filter(item => item !== "" && item !== null && item !== undefined);
}

!(async () => {
  if (!cookiesArr[0]) {
    $.msg($.name, '【提示】请先获取京东账号一cookie\n直接使用NobyDa的京东签到获取', 'https://bean.m.jd.com/bean/signIndex.action', {"open-url": "https://bean.m.jd.com/bean/signIndex.action"});
    return;
  }
  
	$.TokenLists = []
  
        //$.innerTokenList = await getStoreTokee('https://zy.kejiwanjia.com/jd_dpqiandao.php');
        $.innerTokenList = token
	
	$.TokenLists.push(...$.TokenList,...$.innerTokenList);

	
  for (let i = 0; i < cookiesArr.length; i++) {
    if (cookiesArr[i]) {
      cookie = cookiesArr[i];
      $.UserName = decodeURIComponent(cookie.match(/pt_pin=(.+?);/) && cookie.match(/pt_pin=(.+?);/)[1])
      $.index = i + 1;
      $.isLogin = true;
      $.nickName = '';
      message = '';
      await TotalBean();
      console.log(`\n******开始【京东账号${$.index}】${$.nickName || $.UserName}*********\n`);
      if (!$.isLogin) {
        $.msg($.name, `【提示】cookie已失效`, `京东账号${$.index} ${$.nickName || $.UserName}\n请重新登录获取\nhttps://bean.m.jd.com/bean/signIndex.action`, {"open-url": "https://bean.m.jd.com/bean/signIndex.action"});

        if ($.isNode()) {
          await notify.sendNotify(`${$.name}cookie已失效 - ${$.UserName}`, `京东账号${$.index} ${$.UserName}\n请重新登录获取cookie`);
        }
        continue
      }
      await babel_diy_zeus();
	  await showMsg()
      //if(i  <1 ) {await showMsg()}
    }
  }
})()
    .catch((e) => {
      $.log('', `❌ ${$.name}, 失败! 原因: ${e}!`, '')
    })
    .finally(() => {
      $.done();
    })

//开始店铺签到
async function babel_diy_zeus(){
	
  for (var j = 0; j < $.TokenLists.length; j++) {
	  
	await $.wait(3000);  
    num=j+1
    if ($.TokenLists[j]=='') {continue}
    await getvenderId($.TokenLists[j])
    if (vender=='') {continue}
    await getvenderName(vender)
    await getActivityInfo($.TokenLists[j],vender)
    await signCollectGift($.TokenLists[j],vender,activityId)
    await taskUrl($.TokenLists[j],vender)
  }
}

//获取店铺ID
function getvenderId(token) {
  return new Promise(resolve => {
    const options = {
      url: `https://api.m.jd.com/api?appid=interCenter_shopSign&t=${Date.now()}&loginType=2&functionId=interact_center_shopSign_getActivityInfo&body={%22token%22:%22${token}%22,%22venderId%22:%22%22}&jsonp=jsonp1000`,
      headers: {
        "accept": "*/*",
        "accept-encoding": "gzip, deflate, br",
        "accept-language": "zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7",
        "cookie": cookie,
        "referer": 'https://h5.m.jd.com/',
        "User-Agent": `Mozilla/5.0 (Linux; U; Android 10; zh-cn; MI 8 Build/QKQ1.190828.002) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/79.0.3945.147 Mobile Safari/537.36 XiaoMi/MiuiBrowser/13.5.40`
      }
    }
    $.get(options, (err, resp, data) => {
      try {
        if (err) {
          console.log(`\n${$.name}: API查询请求失败 ‼️‼️`)
          $.logErr(err);
        } else {
          //console.log(data)
          data = JSON.parse(/{(.*)}/g.exec(data)[0])
          if (data.code==402) {
            vender=''
            console.log(`第`+num+`个店铺签到活动已失效`)
            message +=`第`+num+`个店铺签到活动已失效\n`
          }else{
            vender=data.data.venderId
          }
        }
      } catch (e) {
        $.logErr(e, resp);
      } finally {
        resolve(data);
      }
    })
  })
}

//获取店铺名称
function getvenderName(venderId) {
  return new Promise(resolve => {
    const options = {
      url: `https://wq.jd.com/mshop/QueryShopMemberInfoJson?venderId=${venderId}`,
      headers: {
        "accept": "*/*",
        "accept-encoding": "gzip, deflate, br",
        "accept-language": "zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7",
        "cookie": cookie,
        "User-Agent": `Mozilla/5.0 (Linux; U; Android 10; zh-cn; MI 8 Build/QKQ1.190828.002) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/79.0.3945.147 Mobile Safari/537.36 XiaoMi/MiuiBrowser/13.5.40`
      }
    }
    $.get(options, (err, resp, data) => {
      try {
        if (err) {
          console.log(`\n${$.name}: API查询请求失败 ‼️‼️`)
          $.logErr(err);
        } else {
          //console.log(data)
          data = JSON.parse(data)
          shopName = data.shopName
          console.log(`【`+shopName+`】`)
          message +=`【`+shopName+`】`
        }
      } catch (e) {
        $.logErr(e, resp);
      } finally {
        resolve(data);
      }
    })
  })
}


//获取店铺活动信息
function getActivityInfo(token,venderId) {
  return new Promise(resolve => {
    const options = {
      url: `${JD_API_HOST}&t=${Date.now()}&loginType=2&functionId=interact_center_shopSign_getActivityInfo&body={%22token%22:%22${token}%22,%22venderId%22:${venderId}}&jsonp=jsonp1005`,
      headers: {
        "accept": "accept",
        "accept-encoding": "gzip, deflate",
        "accept-language": "zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7",
        "cookie": cookie,
         "referer": `https://h5.m.jd.com/babelDiy/Zeus/2PAAf74aG3D61qvfKUM5dxUssJQ9/index.html?token=${token}&sceneval=2&jxsid=16178634353215523301&cu=true&utm_source=kong&utm_medium=jingfen&utm_campaign=t_2009753434_&utm_term=fa3f8f38c56f44e2b4bfc2f37bce9713`,
        "User-Agent": `Mozilla/5.0 (Linux; U; Android 10; zh-cn; MI 8 Build/QKQ1.190828.002) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/79.0.3945.147 Mobile Safari/537.36 XiaoMi/MiuiBrowser/13.5.40`
      }
    }
    $.get(options, (err, resp, data) => {
      try {
        if (err) {
          // console.log(data)
          console.log(`\n${$.name}: API查询请求失败 ‼️‼️`)
          $.logErr(err);
        } else {
          //console.log(data)
          data = JSON.parse(/{(.*)}/g.exec(data)[0])
          activityId=data.data.id
          //console.log(data)
          let mes='';
          for (let i = 0; i < data.data.continuePrizeRuleList.length; i++) {
            const level=data.data.continuePrizeRuleList[i].level
            const discount=data.data.continuePrizeRuleList[i].prizeList[0].discount
            mes += "签到"+level+"天,获得"+discount+'豆'
          }
          //console.log(message+mes+'\n')
          //message += mes+'\n'
        }
      } catch (e) {
        $.logErr(e, resp);
      } finally {
        resolve(data);
      }
    })
  })
}

//店铺签到
function signCollectGift(token,venderId,activitytemp) {
  return new Promise(resolve => {
    const options = {
      url: `${JD_API_HOST}&t=${Date.now()}&loginType=2&functionId=interact_center_shopSign_signCollectGift&body={%22token%22:%22${token}%22,%22venderId%22:688200,%22activityId%22:${activitytemp},%22type%22:56,%22actionType%22:7}&jsonp=jsonp1004`,
      headers: {
        "accept": "accept",
        "accept-encoding": "gzip, deflate",
        "accept-language": "zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7",
        "cookie": cookie,
        "referer": `https://h5.m.jd.com/babelDiy/Zeus/2PAAf74aG3D61qvfKUM5dxUssJQ9/index.html?token=${token}&sceneval=2&jxsid=16178634353215523301&cu=true&utm_source=kong&utm_medium=jingfen&utm_campaign=t_2009753434_&utm_term=fa3f8f38c56f44e2b4bfc2f37bce9713`,
        "User-Agent": `Mozilla/5.0 (Linux; U; Android 10; zh-cn; MI 8 Build/QKQ1.190828.002) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/79.0.3945.147 Mobile Safari/537.36 XiaoMi/MiuiBrowser/13.5.40`
      }
    }
    $.get(options, (err, resp, data) => {
      try {
        if (err) {
          console.log(`\n${$.name}: API查询请求失败 ‼️‼️`)
          $.logErr(err);
        } else {
          //console.log(data)
          data = JSON.parse(/{(.*)}/g.exec(data)[0])
        }
      } catch (e) {
        $.logErr(e, resp);
      } finally {
        resolve(data);
      }
    })
  })
}

//店铺获取签到信息
function taskUrl(token,venderId) {
  return new Promise(resolve => {
    const options = {
      url: `${JD_API_HOST}&t=${Date.now()}&loginType=2&functionId=interact_center_shopSign_getSignRecord&body={%22token%22:%22${token}%22,%22venderId%22:${venderId},%22activityId%22:${activityId},%22type%22:56}&jsonp=jsonp1006`,
      headers: {
        "accept": "application/json",
        "accept-encoding": "gzip, deflate, br",
        "accept-language": "zh-CN,zh;q=0.9",
        "cookie": cookie,
        "referer": `https://h5.m.jd.com/`,
        "user-agent": `Mozilla/5.0 (Linux; U; Android 10; zh-cn; MI 8 Build/QKQ1.190828.002) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/79.0.3945.147 Mobile Safari/537.36 XiaoMi/MiuiBrowser/13.5.40`
      }
    }
    $.get(options, (err, resp, data) => {
      try {
        if (err) {
          console.log(`\n${$.name}: API查询请求失败 ‼️‼️`)
          $.logErr(err);
        } else {
            //console.log(data)
            data = JSON.parse(/{(.*)}/g.exec(data)[0])
            console.log(`已签到：`+data.data.days+`天`)
            message +=`已签到：`+data.data.days+`天\n`
        }
      } catch (e) {
        $.logErr(e, resp);
      } finally {
        resolve(data);
      }
    })
  })
}

async function showMsg() {
  if ($.isNode()) {
    $.msg($.name, '', `【京东账号${$.index}】${$.nickName}\n${message}`);
    //await notify.sendNotify(`${$.name} - 账号${$.index} - ${$.nickName}`, `【京东账号${$.index}】${$.nickName}\n${message}`);
  }
}

function TotalBean() {
  return new Promise(async resolve => {
    const options = {
      "url": `https://wq.jd.com/user/info/QueryJDUserInfo?sceneval=2`,
      "headers": {
        "Accept": "application/json,text/plain, */*",
        "Content-Type": "application/x-www-form-urlencoded",
        "Accept-Encoding": "gzip, deflate, br",
        "Accept-Language": "zh-cn",
        "Connection": "keep-alive",
        "Cookie": cookie,
        "Referer": "https://wqs.jd.com/my/jingdou/my.shtml?sceneval=2",
        "User-Agent": `jdapp;android;9.3.5;10;3353234393134326-3673735303632613;network/wifi;model/MI 8;addressid/138719729;aid/3524914bc77506b1;oaid/274aeb3d01b03a22;osVer/29;appBuild/86390;psn/Mp0dlaZf4czQtfPNMEfpcYU9S/f2Vv4y|2255;psq/1;adk/;ads/;pap/JA2015_311210|9.3.5|ANDROID 10;osv/10;pv/2039.1;jdv/0|androidapp|t_335139774|appshare|QQfriends|1611211482018|1611211495;ref/com.jingdong.app.mall.home.JDHomeFragment;partner/jingdong;apprpd/Home_Main;eufv/1;jdSupportDarkMode/0;Mozilla/5.0 (Linux; Android 10; MI 8 Build/QKQ1.190828.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045230 Mobile Safari/537.36`
      }
    }
    $.post(options, (err, resp, data) => {
      try {
        if (err) {
          console.log(`${JSON.stringify(err)}`)
          console.log(`${$.name} API请求失败，请检查网路重试`)
        } else {
          if (data) {
            data = JSON.parse(data);
            if (data['retcode'] === 13) {
              $.isLogin = false; //cookie过期
              return
            }
            $.nickName = (data['base'] && data['base'].nickname) || $.UserName;
          } else {
            console.log(`京东服务器返回空数据`)
          }
        }
      } catch (e) {
        $.logErr(e, resp)
      } finally {
        resolve();
      }
    })
  })
}

function jsonParse(str) {
  if (typeof str == "string") {
    try {
      return JSON.parse(str);
    } catch (e) {
      console.log(e);
      $.msg($.name, '', '请勿随意在BoxJs输入框修改内容\n建议通过脚本去获取cookie')
      return [];
    }
  }
}

function getStoreTokee(url) {
  return new Promise(async resolve => {
    const options = {
      "url": `${url}?${new Date()}`,
      "timeout": 10000,
      "headers": {
        "User-Agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1 Edg/87.0.4280.88"
      }
    };
    if ($.isNode() && process.env.TG_PROXY_HOST && process.env.TG_PROXY_PORT) {
      const tunnel = require("tunnel");
      const agent = {
        https: tunnel.httpsOverHttp({
          proxy: {
            host: process.env.TG_PROXY_HOST,
            port: process.env.TG_PROXY_PORT * 1
          }
        })
      }
      Object.assign(options, { agent })
    }
    let res = []
    $.get(options, async (err, resp, data) => {
      try {
        if (err) {
        } else {
          if (data) res = JSON.parse(data)
        }
      } catch (e) {
        // $.logErr(e, resp)
      } finally {
        resolve(res || []);
      }
    })
    await $.wait(10000)
    resolve(res);
  })
}

// prettier-ignore
function Env(t,e){class s{constructor(t){this.env=t}send(t,e="GET"){t="string"==typeof t?{url:t}:t;let s=this.get;return"POST"===e&&(s=this.post),new Promise((e,i)=>{s.call(this,t,(t,s,r)=>{t?i(t):e(s)})})}get(t){return this.send.call(this.env,t)}post(t){return this.send.call(this.env,t,"POST")}}return new class{constructor(t,e){this.name=t,this.http=new s(this),this.data=null,this.dataFile="box.dat",this.logs=[],this.isMute=!1,this.isNeedRewrite=!1,this.logSeparator="\n",this.startTime=(new Date).getTime(),Object.assign(this,e),this.log("",`\ud83d\udd14${this.name}, \u5f00\u59cb!`)}isNode(){return"undefined"!=typeof module&&!!module.exports}isQuanX(){return"undefined"!=typeof $task}isSurge(){return"undefined"!=typeof $httpClient&&"undefined"==typeof $loon}isLoon(){return"undefined"!=typeof $loon}toObj(t,e=null){try{return JSON.parse(t)}catch{return e}}toStr(t,e=null){try{return JSON.stringify(t)}catch{return e}}getjson(t,e){let s=e;const i=this.getdata(t);if(i)try{s=JSON.parse(this.getdata(t))}catch{}return s}setjson(t,e){try{return this.setdata(JSON.stringify(t),e)}catch{return!1}}getScript(t){return new Promise(e=>{this.get({url:t},(t,s,i)=>e(i))})}runScript(t,e){return new Promise(s=>{let i=this.getdata("@chavy_boxjs_userCfgs.httpapi");i=i?i.replace(/\n/g,"").trim():i;let r=this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout");r=r?1*r:20,r=e&&e.timeout?e.timeout:r;const[o,h]=i.split("@"),a={url:`http://${h}/v1/scripting/evaluate`,body:{script_text:t,mock_type:"cron",timeout:r},headers:{"X-Key":o,Accept:"*/*"}};this.post(a,(t,e,i)=>s(i))}).catch(t=>this.logErr(t))}loaddata(){if(!this.isNode())return{};{this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e);if(!s&&!i)return{};{const i=s?t:e;try{return JSON.parse(this.fs.readFileSync(i))}catch(t){return{}}}}}writedata(){if(this.isNode()){this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e),r=JSON.stringify(this.data);s?this.fs.writeFileSync(t,r):i?this.fs.writeFileSync(e,r):this.fs.writeFileSync(t,r)}}lodash_get(t,e,s){const i=e.replace(/\[(\d+)\]/g,".$1").split(".");let r=t;for(const t of i)if(r=Object(r)[t],void 0===r)return s;return r}lodash_set(t,e,s){return Object(t)!==t?t:(Array.isArray(e)||(e=e.toString().match(/[^.[\]]+/g)||[]),e.slice(0,-1).reduce((t,s,i)=>Object(t[s])===t[s]?t[s]:t[s]=Math.abs(e[i+1])>>0==+e[i+1]?[]:{},t)[e[e.length-1]]=s,t)}getdata(t){let e=this.getval(t);if(/^@/.test(t)){const[,s,i]=/^@(.*?)\.(.*?)$/.exec(t),r=s?this.getval(s):"";if(r)try{const t=JSON.parse(r);e=t?this.lodash_get(t,i,""):e}catch(t){e=""}}return e}setdata(t,e){let s=!1;if(/^@/.test(e)){const[,i,r]=/^@(.*?)\.(.*?)$/.exec(e),o=this.getval(i),h=i?"null"===o?null:o||"{}":"{}";try{const e=JSON.parse(h);this.lodash_set(e,r,t),s=this.setval(JSON.stringify(e),i)}catch(e){const o={};this.lodash_set(o,r,t),s=this.setval(JSON.stringify(o),i)}}else s=this.setval(t,e);return s}getval(t){return this.isSurge()||this.isLoon()?$persistentStore.read(t):this.isQuanX()?$prefs.valueForKey(t):this.isNode()?(this.data=this.loaddata(),this.data[t]):this.data&&this.data[t]||null}setval(t,e){return this.isSurge()||this.isLoon()?$persistentStore.write(t,e):this.isQuanX()?$prefs.setValueForKey(t,e):this.isNode()?(this.data=this.loaddata(),this.data[e]=t,this.writedata(),!0):this.data&&this.data[e]||null}initGotEnv(t){this.got=this.got?this.got:require("got"),this.cktough=this.cktough?this.cktough:require("tough-cookie"),this.ckjar=this.ckjar?this.ckjar:new this.cktough.CookieJar,t&&(t.headers=t.headers?t.headers:{},void 0===t.headers.Cookie&&void 0===t.cookieJar&&(t.cookieJar=this.ckjar))}get(t,e=(()=>{})){t.headers&&(delete t.headers["Content-Type"],delete t.headers["Content-Length"]),this.isSurge()||this.isLoon()?(this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.get(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)})):this.isQuanX()?(this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t))):this.isNode()&&(this.initGotEnv(t),this.got(t).on("redirect",(t,e)=>{try{if(t.headers["set-cookie"]){const s=t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString();this.ckjar.setCookieSync(s,null),e.cookieJar=this.ckjar}}catch(t){this.logErr(t)}}).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)}))}post(t,e=(()=>{})){if(t.body&&t.headers&&!t.headers["Content-Type"]&&(t.headers["Content-Type"]="application/x-www-form-urlencoded"),t.headers&&delete t.headers["Content-Length"],this.isSurge()||this.isLoon())this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.post(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)});else if(this.isQuanX())t.method="POST",this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t));else if(this.isNode()){this.initGotEnv(t);const{url:s,...i}=t;this.got.post(s,i).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)})}}time(t){let e={"M+":(new Date).getMonth()+1,"d+":(new Date).getDate(),"H+":(new Date).getHours(),"m+":(new Date).getMinutes(),"s+":(new Date).getSeconds(),"q+":Math.floor(((new Date).getMonth()+3)/3),S:(new Date).getMilliseconds()};/(y+)/.test(t)&&(t=t.replace(RegExp.$1,((new Date).getFullYear()+"").substr(4-RegExp.$1.length)));for(let s in e)new RegExp("("+s+")").test(t)&&(t=t.replace(RegExp.$1,1==RegExp.$1.length?e[s]:("00"+e[s]).substr((""+e[s]).length)));return t}msg(e=t,s="",i="",r){const o=t=>{if(!t)return t;if("string"==typeof t)return this.isLoon()?t:this.isQuanX()?{"open-url":t}:this.isSurge()?{url:t}:void 0;if("object"==typeof t){if(this.isLoon()){let e=t.openUrl||t.url||t["open-url"],s=t.mediaUrl||t["media-url"];return{openUrl:e,mediaUrl:s}}if(this.isQuanX()){let e=t["open-url"]||t.url||t.openUrl,s=t["media-url"]||t.mediaUrl;return{"open-url":e,"media-url":s}}if(this.isSurge()){let e=t.url||t.openUrl||t["open-url"];return{url:e}}}};this.isMute||(this.isSurge()||this.isLoon()?$notification.post(e,s,i,o(r)):this.isQuanX()&&$notify(e,s,i,o(r)));let h=["","==============\ud83d\udce3\u7cfb\u7edf\u901a\u77e5\ud83d\udce3=============="];h.push(e),s&&h.push(s),i&&h.push(i),console.log(h.join("\n")),this.logs=this.logs.concat(h)}log(...t){t.length>0&&(this.logs=[...this.logs,...t]),console.log(t.join(this.logSeparator))}logErr(t,e){const s=!this.isSurge()&&!this.isQuanX()&&!this.isLoon();s?this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t.stack):this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t)}wait(t){return new Promise(e=>setTimeout(e,t))}done(t={}){const e=(new Date).getTime(),s=(e-this.startTime)/1e3;this.log("",`\ud83d\udd14${this.name}, \u7ed3\u675f! \ud83d\udd5b ${s} \u79d2`),this.log(),(this.isSurge()||this.isQuanX()||this.isLoon())&&$done(t)}}(t,e)}
